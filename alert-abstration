// ============================================
// üìÅ services/swalService.ts
// ============================================

import withReactContent from 'sweetalert2-react-content';
import Swal, { SweetAlertResult } from 'sweetalert2';
import { AppSwalAlerts } from '../../../../../../../components/molecules/cascMolecules/AppSwalAlert';
import { TypographyProps } from '@mui/material';
import React from 'react';

// ===== TIPOS =====

export interface AlertOptions {
  type: 'success' | 'error' | 'warning' | 'info' | 'confirm';
  title: string;
  text?: string;
  textVariant?: TypographyProps['variant'];
  confirmButtonText?: string;
  cancelButtonText?: string;
}

// ===== SERVI√áO =====

class SwalService {
  private MySwal = withReactContent(Swal);

  /**
   * Mostra qualquer tipo de alerta usando AppSwalAlerts
   */
  async show(options: AlertOptions): Promise<SweetAlertResult | boolean> {
    const result = await this.MySwal.fire({
      html: (
        <AppSwalAlerts
          swal={this.MySwal}
          type={options.type}
          title={options.title}
          text={options.text ?? ''}
          textVariant={options.textVariant}
          confirmButtonText={options.confirmButtonText}
        />
      ),
    });

    // Se for confirma√ß√£o, retorna boolean
    if (options.type === 'confirm') {
      return result.isConfirmed;
    }

    // Sen√£o, retorna o resultado completo
    return result;
  }
}

export const swalService = new SwalService();

// ============================================
// üìÅ utils/swallAlert.ts
// ============================================

import { swalService, AlertOptions } from '../services/swalService';

/**
 * API simplificada para alertas
 */
export const swallAlert = {
  /**
   * M√©todo principal
   */
  show: (options: AlertOptions) => swalService.show(options),

  /**
   * Alerta de sucesso
   */
  success: (title: string, text?: string) =>
    swalService.show({ type: 'success', title, text }),

  /**
   * Alerta de erro
   */
  error: (title: string, text?: string) =>
    swalService.show({ type: 'error', title, text }),

  /**
   * Alerta de aviso
   */
  warning: (title: string, text?: string) =>
    swalService.show({ type: 'warning', title, text }),

  /**
   * Alerta informativo
   */
  info: (title: string, text?: string) =>
    swalService.show({ type: 'info', title, text }),

  /**
   * Alerta de confirma√ß√£o
   */
  confirm: (title: string, text?: string, confirmText?: string, cancelText?: string) =>
    swalService.show({
      type: 'confirm',
      title,
      text,
      confirmButtonText: confirmText,
      cancelButtonText: cancelText,
    }) as Promise<boolean>,
};

/**
 * Compatibilidade com vers√£o anterior
 */
export const alert = {
  success: swallAlert.success,
  error: swallAlert.error,
  warning: swallAlert.warning,
  info: swallAlert.info,
};

// ============================================
// üìÅ examples/usageExamples.ts (OPCIONAL)
// ============================================

import { swallAlert } from '../utils/swallAlert';

/**
 * EXEMPLOS DE USO - Ultra Simplificado
 */

// ========================================
// 1. USO B√ÅSICO
// ========================================

export const exemploBasico = () => {
  // Alertas simples
  swallAlert.success('Sucesso!', 'Opera√ß√£o conclu√≠da');
  swallAlert.error('Erro!', 'Algo deu errado');
  swallAlert.warning('Aten√ß√£o!', 'Verifique os dados');
  swallAlert.info('Info', 'Processo finalizado');
};

// ========================================
// 2. CONFIRMA√á√ÉO
// ========================================

export const exemploConfirmacao = async () => {
  const confirmado = await swallAlert.confirm(
    'Excluir item?',
    'Esta a√ß√£o √© irrevers√≠vel',
    'Sim, excluir',
    'Cancelar'
  );
  
  if (confirmado) {
    console.log('Usu√°rio confirmou');
  }
};

// ========================================
// 3. M√âTODO SHOW (FLEX√çVEL)
// ========================================

export const exemploFlexivel = () => {
  // Com todas as op√ß√µes
  swallAlert.show({
    type: 'warning',
    title: 'Sess√£o expirando',
    text: 'Voc√™ ser√° desconectado em 5 minutos',
    textVariant: 'body2'
  });
};

// ========================================
// 4. SEU CASO DE USO (indexLoader)
// ========================================

export const exemploLoader = async (loadingOrderNumber: string) => {
  try {
    // Simula busca da OC
    const response = await fetch(`/api/oc/${loadingOrderNumber}`);
    
    if (!response.ok) {
      swallAlert.error(
        'OC n√£o encontrada',
        `N√£o foi poss√≠vel encontrar a OC ${loadingOrderNumber}, por favor entre em contato com a log√≠stica`
      );
      return null;
    }
    
    return response.json();
  } catch (error) {
    swallAlert.error('Erro inesperado', 'Contate o suporte t√©cnico');
    return null;
  }
};

// ========================================
// 5. MIGRA√á√ÉO DO SEU C√ìDIGO ATUAL
// ========================================

// ANTES (indexLoader.ts):
// alert.error(`N√£o foi poss√≠vel encontrar a OC ${loadingOrderNumber}...`);

// DEPOIS:
export const migracaoExemplo = (loadingOrderNumber: string) => {
  swallAlert.error(
    'OC n√£o encontrada',
    `N√£o foi poss√≠vel encontrar a OC ${loadingOrderNumber}, por favor entre em contato com a log√≠stica`
  );
};

// ============================================
// üìã INSTRU√á√ïES DE INSTALA√á√ÉO
// ============================================

/*
üöÄ COMO USAR ESTE ARQUIVO:

1. ESTRUTURA DE PASTAS:
   src/alerts/
   ‚îú‚îÄ‚îÄ services/
   ‚îÇ   ‚îî‚îÄ‚îÄ swalService.ts
   ‚îî‚îÄ‚îÄ utils/
       ‚îî‚îÄ‚îÄ swallAlert.ts

2. COPIAR O C√ìDIGO:
   - Copie a se√ß√£o "üìÅ services/swalService.ts" para o arquivo swalService.ts
   - Copie a se√ß√£o "üìÅ utils/swallAlert.ts" para o arquivo swallAlert.ts
   - Copie a se√ß√£o "üìÅ examples/usageExamples.ts" se quiser os exemplos

3. AJUSTAR IMPORT:
   No swalService.ts, linha 3, ajuste o caminho do AppSwalAlerts:
   import { AppSwalAlerts } from 'SEU_CAMINHO_AQUI/AppSwalAlert';

4. USAR NO SEU PROJETO:
   import { swallAlert } from './alerts/utils/swallAlert';
   
   // Uso b√°sico
   swallAlert.success('Sucesso!', 'Dados salvos');
   swallAlert.error('Erro!', 'Falha na opera√ß√£o');
   
   // Confirma√ß√£o
   const confirmado = await swallAlert.confirm('Excluir?', 'Tem certeza?');

5. MIGRAR SEU C√ìDIGO ATUAL:
   // ANTES:
   alert.error(`N√£o foi poss√≠vel encontrar a OC ${loadingOrderNumber}...`);
   
   // DEPOIS:
   swallAlert.error(
     'OC n√£o encontrada',
     `N√£o foi poss√≠vel encontrar a OC ${loadingOrderNumber}, por favor entre em contato com a log√≠stica`
   );

‚úÖ RESULTADO:
- Sistema ultra-simplificado (80 linhas vs 210 antes)
- Mant√©m 100% da funcionalidade do AppSwalAlerts
- TypeScript completo
- Compat√≠vel com c√≥digo existente
*/
